generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model accounts {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  users             users   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model cardboard_inventory {
  id        String   @id
  width     Int
  height    Int
  stock     Int
  minStock  Int      @default(10)
  price     Decimal  @default(1.0)
  createdAt DateTime @default(now())
  updatedAt DateTime

  @@unique([width, height])
}

model crossbar_inventory {
  id        String   @id
  length    Int      @unique
  stock     Int
  minStock  Int
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model demand_forecasts {
  id                  String    @id
  frameWidth          Int
  frameHeight         Int
  productType         String
  weekOfYear          Int
  year                Int
  historicalDemand    Int
  forecastedDemand    Int
  confidence          Float     @default(0.8)
  seasonalityFactor   Float     @default(1.0)
  calculatedAt        DateTime  @default(now())
  lastOrderDate       DateTime?
  averageWeeklyDemand Float     @default(0)

  @@unique([frameWidth, frameHeight, productType, weekOfYear, year])
}

model frame_kits {
  id          String    @id
  name        String
  width       Int
  height      Int
  frameType   FrameType
  crossbars   Int       @default(1)
  description String?
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime

  @@unique([width, height, frameType, crossbars])
}

model frame_requirements {
  id                     String                   @id
  orderItemId            String                   @unique
  frameType              FrameType
  widthBars              Int
  heightBars             Int
  crossbars              Int
  crossbarLength         Int?
  width                  Int
  height                 Int
  frameStatus            FrameStatus              @default(NOT_PREPARED)
  preparedAt             DateTime?
  createdAt              DateTime                 @default(now())
  updatedAt              DateTime
  order_items            order_items              @relation(fields: [orderItemId], references: [id], onDelete: Cascade)
  inventory_transactions inventory_transactions[]
}

model inventory_alerts {
  id             String    @id
  itemType       String
  itemId         String?
  alertType      String
  severity       String    @default("MEDIUM")
  message        String
  description    String?
  currentStock   Int?
  minimumStock   Int?
  forecastedNeed Int?
  shortageDate   DateTime?
  isRead         Boolean   @default(false)
  isResolved     Boolean   @default(false)
  resolvedAt     DateTime?
  resolvedBy     String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime
}

model inventory_transactions {
  id                 String              @id
  type               String
  itemType           String
  itemId             String
  quantity           Int
  description        String?
  frameRequirementId String?
  createdAt          DateTime            @default(now())
  frame_requirements frame_requirements? @relation(fields: [frameRequirementId], references: [id])
}

model item_completions {
  id                String             @id
  orderItemId       String
  productionTimerId String?
  operationType     String
  completedAt       DateTime           @default(now())
  operatorName      String?
  notes             String?
  order_items       order_items        @relation(fields: [orderItemId], references: [id], onDelete: Cascade)
  production_timers production_timers? @relation(fields: [productionTimerId], references: [id])
}

model order_items {
  id                 String              @id
  orderId            String
  name               String
  sku                String?
  quantity           Int
  price              Decimal
  imageUrl           String?
  productType        String?
  dimensions         String?
  printStatus        PrintStatus         @default(NOT_PRINTED)
  printedAt          DateTime?
  completedCount     Int                 @default(0)
  completionStatus   CompletionStatus    @default(PENDING)
  createdAt          DateTime            @default(now())
  frame_requirements frame_requirements?
  item_completions   item_completions[]
  orders             orders              @relation(fields: [orderId], references: [id], onDelete: Cascade)
  production_costs   production_costs?
  production_tasks   production_tasks[]
  production_timers  production_timers[]
}

model order_profitability {
  id              String   @id
  orderId         String   @unique
  revenue         Decimal
  shippingRevenue Decimal  @default(0)
  materialCosts   Decimal  @default(0)
  frameCosts      Decimal  @default(0)
  printingCosts   Decimal  @default(0)
  packagingCosts  Decimal  @default(0)
  laborCosts      Decimal  @default(0)
  laborHours      Float    @default(0)
  hourlyRate      Decimal  @default(50)
  shippingCosts   Decimal  @default(0)
  processingFees  Decimal  @default(0)
  overheadCosts   Decimal  @default(0)
  totalCosts      Decimal  @default(0)
  grossProfit     Decimal  @default(0)
  profitMargin    Float    @default(0)
  calculatedAt    DateTime @default(now())
  updatedAt       DateTime
  orders          orders   @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

model orders {
  id                  String               @id
  externalId          String
  shopId              String
  customerName        String
  customerEmail       String
  customerPhone       String?
  shippingAddress     String
  billingAddress      String?
  status              OrderStatus          @default(NEW)
  paymentStatus       PaymentStatus        @default(PENDING)
  totalAmount         Decimal
  currency            String               @default("PLN")
  trackingNumber      String?
  shippingProvider    String?
  orderDate           DateTime
  createdAt           DateTime             @default(now())
  updatedAt           DateTime
  paidAt              DateTime?
  paymentMethod       String?
  shippingCost        Decimal?
  deliveryNotes       String?
  order_items         order_items[]
  order_profitability order_profitability?
  shops               shops                @relation(fields: [shopId], references: [id])
  production_tasks    production_tasks[]
  production_timers   production_timers[]
  shipments           shipments[]

  @@unique([externalId, shopId])
}

model production_cost_config {
  id                         String             @id
  thinStretcherPrice         Decimal            @default(1.0)
  thickStretcherPrice        Decimal            @default(1.5)
  crossbarPrice              Decimal            @default(1.0)
  canvasPricePerM2           Decimal            @default(25.0)
  printingPricePerM2         Decimal            @default(15.0)
  externalPrintingPricePerM2 Decimal            @default(18.0)
  useExternalPrintingDefault Boolean            @default(true)
  printerPurchaseCost        Decimal            @default(15000.0)
  printerMonthlyMaintenance  Decimal            @default(500.0)
  printerLifespanMonths      Int                @default(36)
  framingPrice               Decimal            @default(10.0)
  hookPrice                  Decimal            @default(1.0)
  cardboardPrice             Decimal            @default(1.0)
  wholesaleMarkup            Decimal            @default(100.0)
  marginPercentage           Decimal            @default(20.0)
  hourlyLaborRate            Decimal            @default(50.0)
  estimatedTimePerItem       Decimal            @default(0.5)
  packagingCostPerOrder      Decimal            @default(5.0)
  processingFeePercentage    Decimal            @default(2.0)
  shippingCostPercentage     Decimal            @default(80.0)
  isActive                   Boolean            @default(true)
  createdAt                  DateTime           @default(now())
  updatedAt                  DateTime
  production_costs           production_costs[]
}

model production_costs {
  id                     String                  @id
  orderItemId            String                  @unique
  stretcherCost          Decimal                 @default(0)
  crossbarCost           Decimal                 @default(0)
  canvasCost             Decimal                 @default(0)
  printingCost           Decimal                 @default(0)
  framingCost            Decimal                 @default(0)
  cardboardCost          Decimal                 @default(0)
  hookCost               Decimal                 @default(0)
  totalMaterialCost      Decimal                 @default(0)
  wholesalePrice         Decimal                 @default(0)
  finalPrice             Decimal                 @default(0)
  profit                 Decimal                 @default(0)
  configId               String?
  includeCardboard       Boolean                 @default(true)
  includeHook            Boolean                 @default(true)
  includeFraming         Boolean                 @default(true)
  createdAt              DateTime                @default(now())
  updatedAt              DateTime
  production_cost_config production_cost_config? @relation(fields: [configId], references: [id])
  order_items            order_items             @relation(fields: [orderItemId], references: [id], onDelete: Cascade)
}

model production_plans {
  id               String             @id
  planDate         DateTime
  shift            String             @default("DAY")
  availableHours   Float              @default(8)
  workersCount     Int                @default(1)
  capacity         Int                @default(20)
  status           String             @default("DRAFT")
  plannedItems     Int                @default(0)
  completedItems   Int                @default(0)
  efficiency       Float              @default(0)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime
  production_tasks production_tasks[]

  @@unique([planDate, shift])
}

model production_tasks {
  id               String           @id
  planId           String
  orderId          String
  orderItemId      String
  priority         String           @default("MEDIUM")
  sequence         Int
  estimatedTime    Int
  actualTime       Int?
  status           String           @default("PENDING")
  assignedTo       String?
  assignedAt       DateTime?
  startedAt        DateTime?
  completedAt      DateTime?
  notes            String?
  issues           String?
  orders           orders           @relation(fields: [orderId], references: [id])
  order_items      order_items      @relation(fields: [orderItemId], references: [id])
  production_plans production_plans @relation(fields: [planId], references: [id], onDelete: Cascade)
}

model production_timers {
  id               String             @id
  orderId          String?
  orderItemId      String?
  operationType    String
  description      String?
  startTime        DateTime
  endTime          DateTime?
  duration         Int?
  pausedDuration   Int                @default(0)
  unitsCount       Int                @default(1)
  timePerUnit      Float?
  operatorName     String?
  operatorId       String?
  difficulty       String             @default("MEDIUM")
  quality          String             @default("GOOD")
  notes            String?
  isCompleted      Boolean            @default(false)
  isPaused         Boolean            @default(false)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime
  dimensions       String?
  item_completions item_completions[]
  orders           orders?            @relation(fields: [orderId], references: [id])
  order_items      order_items?       @relation(fields: [orderItemId], references: [id])
}

model sessions {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  users        users    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model shipments {
  id                    String    @id
  orderId               String
  provider              String
  serviceId             String
  serviceName           String
  trackingNumber        String
  carrierTrackingNumber String?
  recipientName         String
  recipientAddress      String
  senderAddress         String?
  weight                Decimal
  dimensions            String
  insuranceValue        Decimal   @default(0)
  shippingCost          Decimal
  currency              String    @default("PLN")
  status                String    @default("CREATED")
  providerOrderId       String?
  providerResponse      String?
  labelUrl              String?
  pickupType            String?
  pickupDate            DateTime?
  pickupTimeFrom        String?
  pickupTimeTo          String?
  estimatedDelivery     DateTime?
  actualDelivery        DateTime?
  deliveryAttempts      Int       @default(0)
  codAmount             Decimal?
  codEnabled            Boolean   @default(false)
  saturdayDelivery      Boolean   @default(false)
  priorityDelivery      Boolean   @default(false)
  smsNotifications      Boolean   @default(false)
  emailNotifications    Boolean   @default(false)
  errorMessage          String?
  errorDetails          String?
  retryCount            Int       @default(0)
  maxRetries            Int       @default(3)
  createdAt             DateTime  @default(now())
  updatedAt             DateTime
  lastChecked           DateTime?
  orders                orders    @relation(fields: [orderId], references: [id], onDelete: Cascade)
}

model shops {
  id        String      @id
  name      String
  platform  String
  url       String
  apiKey    String?
  apiSecret String?
  isActive  Boolean     @default(true)
  createdAt DateTime    @default(now())
  updatedAt DateTime
  orders    orders[]
  sync_logs sync_logs[]
}

model stretcher_bar_inventory {
  id        String   @id
  length    Int
  type      String
  stock     Int
  minStock  Int
  createdAt DateTime @default(now())
  updatedAt DateTime

  @@unique([length, type])
}

model supplier_order_items {
  id                String            @id
  orderId           String
  productId         String
  quantity          Int
  unitPrice         Decimal
  totalPrice        Decimal
  received          Boolean           @default(false)
  receivedQuantity  Int               @default(0)
  receivedAt        DateTime?
  supplier_orders   supplier_orders   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  supplier_products supplier_products @relation(fields: [productId], references: [id])
}

model supplier_orders {
  id                   String                 @id
  supplierId           String
  orderNumber          String                 @unique
  status               String                 @default("DRAFT")
  totalAmount          Decimal
  currency             String                 @default("PLN")
  orderDate            DateTime               @default(now())
  expectedDelivery     DateTime?
  actualDelivery       DateTime?
  paymentStatus        String                 @default("PENDING")
  paidAt               DateTime?
  notes                String?
  internalNotes        String?
  createdAt            DateTime               @default(now())
  updatedAt            DateTime
  supplier_order_items supplier_order_items[]
  suppliers            suppliers              @relation(fields: [supplierId], references: [id])
}

model supplier_products {
  id                   String                 @id
  supplierId           String
  name                 String
  sku                  String?
  category             String
  width                Int?
  height               Int?
  thickness            Int?
  unitPrice            Decimal
  currency             String                 @default("PLN")
  minimumQuantity      Int                    @default(1)
  bulkPrice            Decimal?
  bulkMinQuantity      Int?
  inStock              Boolean                @default(true)
  leadTime             Int?
  createdAt            DateTime               @default(now())
  updatedAt            DateTime
  supplier_order_items supplier_order_items[]
  suppliers            suppliers              @relation(fields: [supplierId], references: [id], onDelete: Cascade)
}

model suppliers {
  id                      String              @id
  name                    String
  contactPerson           String?
  email                   String
  phone                   String?
  website                 String?
  address                 String
  city                    String
  postalCode              String
  country                 String              @default("PL")
  category                SupplierCategory
  paymentTerms            String?
  deliveryTime            Int?
  minimumOrderValue       Decimal?
  rating                  Float               @default(0)
  reliability             Float               @default(0)
  qualityRating           Float               @default(0)
  isActive                Boolean             @default(true)
  isPreferred             Boolean             @default(false)
  thinStripPricePerMeter  Decimal?
  thickStripPricePerMeter Decimal?
  crossbarPricePerMeter   Decimal?
  materialMargin          Float?              @default(0)
  createdAt               DateTime            @default(now())
  updatedAt               DateTime
  supplier_orders         supplier_orders[]
  supplier_products       supplier_products[]
}

model sync_logs {
  id            String    @id
  shopId        String
  status        String    @default("RUNNING")
  startedAt     DateTime  @default(now())
  finishedAt    DateTime?
  duration      Int?
  totalOrders   Int       @default(0)
  newOrders     Int       @default(0)
  updatedOrders Int       @default(0)
  failedOrders  Int       @default(0)
  errorMessage  String?
  errorDetails  String?
  apiOrderCount Int?
  createdAt     DateTime  @default(now())
  shops         shops     @relation(fields: [shopId], references: [id], onDelete: Cascade)
}

model system_config {
  id                           String    @id
  companyName                  String?
  companyLogo                  String?
  companyEmail                 String?
  companyPhone                 String?
  companyAddress               String?
  companyNip                   String?
  companyRegon                 String?
  companyWebsite               String?
  defaultCurrency              String    @default("PLN")
  defaultTimezone              String    @default("Europe/Warsaw")
  businessHours                String?
  workingDays                  String?
  emailNotifications           Boolean   @default(true)
  lowStockThreshold            Int       @default(10)
  orderVolumeAlert             Int       @default(50)
  notificationFrequency        String    @default("REAL_TIME")
  autoReorderEnabled           Boolean   @default(false)
  reorderLeadDays              Int       @default(7)
  safetyStockPercent           Int       @default(20)
  defaultSenderName            String?
  defaultSenderAddress         String?
  shippingMarkup               Decimal   @default(0)
  freeShippingThreshold        Decimal?
  apaczkaAppId                 String?
  apaczkaApiKey                String?
  apaczkaTestMode              Boolean   @default(false)
  companyPostalCode            String?
  furgonetkaClientId           String?
  furgonetkaClientSecret       String?
  furgonetkaUsername           String?
  furgonetkaPassword           String?
  furgonetkaTestMode           Boolean   @default(false)
  dashboardLayout              String    @default("DEFAULT")
  itemsPerPage                 Int       @default(20)
  chartDateRange               Int       @default(30)
  exportFormat                 String    @default("PDF")
  adobeStockApiKey             String?
  adobeStockEnabled            Boolean   @default(false)
  webhookRetryCount            Int       @default(3)
  syncBatchSize                Int       @default(50)
  rushOrderSurcharge           Decimal   @default(25.0)
  maxDailyCapacity             Int?
  productionLeadDays           Int       @default(3)
  orderConfirmationTemplate    String?
  shippingNotificationTemplate String?
  lowStockEmailTemplate        String?
  primaryColor                 String    @default("#3B82F6")
  secondaryColor               String    @default("#6B7280")
  logoPosition                 String    @default("TOP_LEFT")
  customCss                    String?
  autoBackupEnabled            Boolean   @default(true)
  backupFrequency              String    @default("WEEKLY")
  dataRetentionMonths          Int       @default(24)
  isActive                     Boolean   @default(true)
  version                      String    @default("1.0")
  lastBackup                   DateTime?
  createdAt                    DateTime  @default(now())
  updatedAt                    DateTime
}

model users {
  id            String     @id
  email         String     @unique
  emailVerified DateTime?
  name          String?
  password      String?
  image         String?
  role          UserRole   @default(USER)
  isActive      Boolean    @default(true)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime
  accounts      accounts[]
  sessions      sessions[]
}

model verification_tokens {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum CompletionStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
}

enum FrameStatus {
  NOT_PREPARED
  PREPARING
  PREPARED
  MOUNTED
}

enum FrameType {
  THIN
  THICK
}

enum OrderStatus {
  NEW
  PROCESSING
  PRINTED
  PACKAGED
  SHIPPED
  DELIVERED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  PAID
  COD
  FAILED
  REFUNDED
  CANCELLED
}

enum PrintStatus {
  NOT_PRINTED
  PRINTING
  PRINTED
}

enum SupplierCategory {
  FRAMES
  CANVAS
  PRINTING
  PACKAGING
  SHIPPING
  OTHER
}

enum UserRole {
  USER
  ADMIN
}
